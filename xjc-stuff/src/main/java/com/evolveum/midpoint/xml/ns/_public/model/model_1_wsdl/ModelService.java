package com.evolveum.midpoint.xml.ns._public.model.model_1_wsdl;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import java.net.MalformedURLException;
import java.net.URL;

/**
 * This class was generated by Apache CXF 2.4.3
 * 2012-01-18T16:21:53.067+01:00
 * Generated source version: 2.4.3
 */
@WebServiceClient(name = "modelService",
        wsdlLocation = "file:/home/lazyman/Work/evolveum/midpoint/trunk/infra/schema/src/main/resources/xml/ns/private/model/modelWrapper.wsdl",
        targetNamespace = "http://midpoint.evolveum.com/xml/ns/public/model/model-1.wsdl")
public class ModelService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://midpoint.evolveum.com/xml/ns/public/model/model-1.wsdl", "modelService");
    public final static QName ModelPort = new QName("http://midpoint.evolveum.com/xml/ns/public/model/model-1.wsdl", "modelPort");

    static {
        URL url = null;
        try {
            url = new URL("file:/home/lazyman/Work/evolveum/midpoint/trunk/infra/schema/src/main/resources/xml/ns/private/model/modelWrapper.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(ModelService.class.getName())
                    .log(java.util.logging.Level.INFO,
                            "Can not initialize the default wsdl from {0}", "file:/home/lazyman/Work/evolveum/midpoint/trunk/infra/schema/src/main/resources/xml/ns/private/model/modelWrapper.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public ModelService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public ModelService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ModelService() {
        super(WSDL_LOCATION, SERVICE);
    }


    /**
     * @return returns ModelPortType
     */
    @WebEndpoint(name = "modelPort")
    public ModelPortType getModelPort() {
        return super.getPort(ModelPort, ModelPortType.class);
    }

    /**
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns ModelPortType
     */
    @WebEndpoint(name = "modelPort")
    public ModelPortType getModelPort(WebServiceFeature... features) {
        return super.getPort(ModelPort, ModelPortType.class, features);
    }

}

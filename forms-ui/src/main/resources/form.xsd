<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2012 Evolveum
  ~
  ~ The contents of this file are subject to the terms
  ~ of the Common Development and Distribution License
  ~ (the License). You may not use this file except in
  ~ compliance with the License.
  ~
  ~ You can obtain a copy of the License at
  ~ http://www.opensource.org/licenses/cddl1 or
  ~ CDDLv1.0.txt file in the source code distribution.
  ~ See the License for the specific language governing
  ~ permission and limitations under the License.
  ~
  ~ If applicable, add the following below the CDDL Header,
  ~ with the fields enclosed by brackets [] replaced by
  ~ your own identifying information:
  ~
  ~ Portions Copyrighted 2012 [name of copyright owner]
  -->
<xsd:schema targetNamespace="http://midpoint.evolveum.com/xml/ns/public/gui/form"
            xmlns:tns="http://midpoint.evolveum.com/xml/ns/public/gui/form"
            xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            xmlns:c="http://midpoint.evolveum.com/xml/ns/public/common/common-2"
            xmlns:a="http://prism.evolveum.com/xml/ns/public/annotation-2"
            xmlns:t="http://prism.evolveum.com/xml/ns/public/types-2"
            xmlns:q="http://prism.evolveum.com/xml/ns/public/query-2"
            xmlns:jaxb="http://java.sun.com/xml/ns/jaxb"
            xmlns:xjc="http://java.sun.com/xml/ns/jaxb/xjc"
            xmlns:xenc="http://www.w3.org/2001/04/xmlenc#"
            elementFormDefault="qualified"
            jaxb:extensionBindingPrefixes="xjc"
            jaxb:version="2.0">

    <xsd:annotation>
        <xsd:appinfo>
            <jaxb:globalBindings>
                <xjc:typeSubstitution type="complex"/>
                <xjc:serializable uid="201206291507"/>
            </jaxb:globalBindings>
        </xsd:appinfo>
    </xsd:annotation>

    <xsd:element name="form" type="tns:FormType"/>

    <xsd:complexType name="FormType">
        <xsd:sequence>
            <xsd:element name="include" type="tns:IncludeType" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element ref="tns:field" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element name="fieldGroup" type="tns:FieldGroupType" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:string"/>
    </xsd:complexType>

    <xsd:complexType name="AbstractField" abstract="true">
        <xsd:sequence>
            <xsd:element name="label" type="xsd:string"/>
            <xsd:element name="tooltip" type="xsd:string" minOccurs="0"/>
            <xsd:element name="help" type="xsd:string" minOccurs="0"/>
            <xsd:element ref="tns:enabled"/>
            <xsd:element ref="tns:visible"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="IncludeType">
        <!-- reference to another form -->
        <!-- todo later -->
        <!-- reference to form name (probably file name or other identificator for form)
      in #{midpoint.home}/schema/forms -->
    </xsd:complexType>

    <xsd:element name="field" type="tns:FieldType"/>

    <xsd:complexType name="FieldType">
        <xsd:complexContent>
            <xsd:extension base="tns:AbstractField">
                <xsd:sequence>
                    <xsd:element name="display" type="tns:DisplayType"/>
                </xsd:sequence>
                <xsd:attribute name="newLine" type="xsd:boolean" use="optional" default="true"/>
            </xsd:extension>
        </xsd:complexContent>
        <!-- type (display class) *DONE* -->
        <!-- name and pointer to some model -->
        <!-- value - also default values and so on -->
        <!-- validation ajax/on client -->
        <!-- enabled/disabled *DONE* -->
        <!-- some kind of renderer, probably something like IChoiceRenderer in wicket to translate
        real value to display value and after edit to translate displayed value to real value -->
        <!-- access??? *DONE* -->
    </xsd:complexType>

    <xsd:complexType name="DisplayType">
        <xsd:sequence>
            <xsd:element name="property" type="tns:PropertyType" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
        <!-- for default types like text field, label, combo box, etc. -->
        <xsd:attribute name="type" type="xsd:string" use="optional"/>
        <!-- custom implementation of some interface -->
        <xsd:attribute name="class" type="xsd:string" use="optional"/>
    </xsd:complexType>

    <xsd:complexType name="FieldGroupType">
        <xsd:complexContent>
            <xsd:extension base="tns:AbstractField">
                <xsd:sequence>
                    <xsd:element ref="tns:field" maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="PropertyType">
        <xsd:attribute name="name" type="xsd:string"/>
        <!-- todo value -->
    </xsd:complexType>

    <xsd:element name="enabled" type="tns:EnabledType"/>
    <xsd:element name="visible" type="tns:VisibleType"/>

    <xsd:complexType name="ValidationType">
        <xsd:sequence>
            <xsd:element name="server" type="xsd:string" minOccurs="0" maxOccurs="unbounded">
                <xsd:annotation>
                    <xsd:documentation>
                        <!--todo-->
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="client" type="xsd:string" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        <!--todo-->
                        javascript stuff, we replate ${this} with proper input id

                        TODO: add event type attribute to client element for this validator
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="EnabledType">
        <xsd:sequence>
            <!--todo-->
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="VisibleType">
        <!--todo-->
    </xsd:complexType>

    <xsd:simpleType name="OperationType">
        <xsd:annotation>
            <xsd:documentation>
                <!-- todo document -->
            </xsd:documentation>
            <xsd:appinfo>
                <jaxb:typesafeEnumClass/>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="create">
                <xsd:annotation>
                    <xsd:appinfo>
                        <jaxb:typesafeEnumMember name="CREATE"/>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="read">
                <xsd:annotation>
                    <xsd:appinfo>
                        <jaxb:typesafeEnumMember name="READ"/>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="update">
                <xsd:annotation>
                    <xsd:appinfo>
                        <jaxb:typesafeEnumMember name="UPDATE"/>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:enumeration>
        </xsd:restriction>
    </xsd:simpleType>

    <!-- field and field group loops -->
    <!-- ajax validators - default existing stuff, users should be able to implement their own validators -->
    <!-- todo what else do we want in here? -->


</xsd:schema>

<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright (c) 2012 Evolveum
  ~
  ~ The contents of this file are subject to the terms
  ~ of the Common Development and Distribution License
  ~ (the License). You may not use this file except in
  ~ compliance with the License.
  ~
  ~ You can obtain a copy of the License at
  ~ http://www.opensource.org/licenses/cddl1 or
  ~ CDDLv1.0.txt file in the source code distribution.
  ~ See the License for the specific language governing
  ~ permission and limitations under the License.
  ~
  ~ If applicable, add the following below the CDDL Header,
  ~ with the fields enclosed by brackets [] replaced by
  ~ your own identifying information:
  ~
  ~ Portions Copyrighted 2012 [name of copyright owner]
  -->
<form xmlns="http://midpoint.evolveum.com/xml/ns/public/gui/form"
      name="User Detail Form">

    <field widget="text">
        <ref key="user">c:name</ref>
        <display>
            <label>xml.public.common.user.name</label>
            <help>xml.public.common.user.name.help</help>
            <tooltip>xml.public.common.user.name.tooltip</tooltip>
            <cssStyle>font-weight: bold; color: blue;</cssStyle>
            <cssClass>freakinAwesomeClass</cssClass>

            <property name="size">40</property>
        </display>
    </field>
    <fieldGroup>
        <display>
            <label>Address</label>
            <cssStyle>background-color: #ccc;</cssStyle>
        </display>

        <!-- we should use "c:ScriptExpressionEvaluatorType" for "script" element, or something like that -->
        <field name="street">
            <source>
                <!-- value will be default variable for referenced prism value, language by default as groovy -->
                <ref key="user">c:costCenter</ref>
                <expression>
                    <script>
                        <code>value.split()[0]</code>
                    </script>
                </expression>
            </source>
            <display>
                <label>Street</label>
            </display>
        </field>
        <field name="city">
            <source>
                <ref key="user">c:costCenter</ref>
                <expression>
                    <script>
                        <code>value.split()[1]</code>
                    </script>
                </expression>
            </source>
            <display>
                <label>City</label>
            </display>
        </field>
        <field name="zip">
            <source>
                <ref key="user">c:costCenter</ref>
                <expression>
                    <script>
                        <code>value.split()[2]</code>
                    </script>
                </expression>
            </source>
            <display>
                <label>Zip</label>
            </display>
        </field>

        <!--
            all named field will be accessible as simple variables (fields included from other
            forms will be accessible through dot, e.g. <form_alias>.<field_name>

            widget "none" mark special fields which aren't visible, they can be used for
            property values pre/post processing
        -->
        <field widget="none">
            <target>
                <ref key="user">c:costCenter</ref>
                <expression>
                    <script>
                        <code>street + ',' + city + ',' + zip</code>
                    </script>
                </expression>
            </target>
        </field>

        <!--
            standard "ref" element used in fields is equal to source and target defined with
            the same ref and empty code expression
        -->

        <!-- these fields are the same -->
        <field>
            <ref key="user">c:costCenter</ref>
        </field>

        <field>
            <source>
                <ref key="user">c:costCenter</ref>
            </source>
            <target>
                <ref key="user">c:costCenter</ref>
            </target>
        </field>

        <field>
            <source>
                <ref key="user">c:costCenter</ref>
                <expression>
                    <script>
                        <code>value</code>
                    </script>
                </expression>
            </source>
            <target>
                <ref key="user">c:costCenter</ref>
                <expression>
                    <script>
                        <code>value</code>
                    </script>
                </expression>
            </target>
        </field>

        <!--
            todo what about multivalue properties/fields, e.g. how would our address looked like if it
            was multivalue -> in case user can have multiple addresses
        -->
    </fieldGroup>


    <field widget="text" name="login">
        <ref key="user">c:name</ref>
    </field>
    <field widget="none">
        <target>
            <ref key="user">c:emailAddress</ref>
            <expression>
                <script>name + '@example.com'</script>
            </expression>
        </target>
    </field>

    <field name="email">
        <source>
            <ref key="user">c:emailAddress</ref>
            <expression>
                <script>value.replace('@example.com','')</script>
            </expression>
        </source>
        <target>
            <ref key="user">c:emailAddress</ref>
            <expression>
                <script>value + '@example.com'</script>
            </expression>
        </target>
    </field>
</form>